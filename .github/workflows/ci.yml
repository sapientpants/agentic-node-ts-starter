name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

# Cancel in-progress runs for PRs, but not for main branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read
  id-token: write
  attestations: write
  pull-requests: read

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Security and quality checks
      - name: Audit dependencies
        run: pnpm audit --audit-level critical

      - name: Type check
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format

      - name: Test with coverage
        run: pnpm test:coverage

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  changeset-check:
    name: Check Changeset
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for changeset
        run: |
          if pnpm changeset status --since=origin/main 2>&1 | grep -q "No changesets present"; then
            echo "::error::This PR does not include a changeset."
            echo ""
            echo "Every PR must include a changeset to document the changes."
            echo ""
            echo "To add a changeset:"
            echo "  - For user-facing changes: run 'pnpm changeset'"
            echo "  - For internal changes (CI, tests, refactoring): run 'pnpm changeset --empty'"
            echo ""
            exit 1
          else
            echo "âœ… Changeset found"
          fi

  build-artifacts:
    name: Build Artifacts
    needs: [validate]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      run-id: ${{ github.run_id }}
      run-number: ${{ github.run_number }}
      sha: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Generate SBOM
        run: pnpm sbom

      - name: Create build manifest
        run: |
          cat > build-manifest.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "sha": "${{ github.sha }}",
            "run_id": "${{ github.run_id }}",
            "run_number": "${{ github.run_number }}",
            "ref": "${{ github.ref }}",
            "actor": "${{ github.actor }}"
          }
          EOF

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_id }}
          path: |
            dist/
            package.json
            pnpm-lock.yaml
            build-manifest.json
          retention-days: 30
          if-no-files-found: error

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.run_id }}
          path: sbom.cdx.json
          retention-days: 30

      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: |
            dist/**/*.js
            sbom.cdx.json

  security-scan:
    name: Security Scan
    needs: [validate]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: javascript-typescript

      - name: Run OSV Scanner
        run: |
          curl -sSfL https://github.com/google/osv-scanner/releases/download/v1.9.1/osv-scanner_linux_amd64 -o osv-scanner
          chmod +x osv-scanner
          ./osv-scanner --format=sarif --output=osv-results.sarif ./ || true

      - name: Upload OSV results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: osv-results.sarif
          category: osv-scan
