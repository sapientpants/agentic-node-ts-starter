name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  attestations: write
  id-token: write
  security-events: write
  pull-requests: read

jobs:
  changeset-validation:
    name: Validate Changeset
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for changeset
        run: |
          # Check if there are changesets
          if pnpm changeset status --since=origin/main 2>&1 | grep -q "No changesets present"; then
            echo "❌ Error: This PR does not include a changeset."
            echo ""
            echo "Every PR must include a changeset to document the changes."
            echo ""
            echo "To add a changeset:"
            echo "  - For user-facing changes: run 'pnpm changeset'"
            echo "  - For internal changes (CI, tests, refactoring): run 'pnpm changeset --empty'"
            echo ""
            echo "Learn more about changesets in CONTRIBUTING.md"
            exit 1
          else
            echo "✅ Changeset found"
          fi

  # Continue with existing jobs...
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4

      # pnpm + Node (both cached)
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js (cached)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm audit --audit-level critical
      - run: pnpm typecheck
      - run: pnpm lint
      - run: pnpm format
      - run: pnpm test

      - name: Generate SBOMs
        run: pnpm sbom

      - name: Build
        run: pnpm build

      - name: Attest build provenance (SLSA)
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'dist/**'

      - name: Attest SBOM
        uses: actions/attest-sbom@v2
        with:
          subject-path: 'dist/**'
          sbom-path: 'sbom.cdx.json'

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.cdx.json
          retention-days: 30

  osv-scan:
    permissions:
      security-events: write
      contents: read
      actions: read
    uses: 'google/osv-scanner-action/.github/workflows/osv-scanner-reusable-pr.yml@v2.2.1'

  codeql:
    permissions:
      security-events: write
      contents: read
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
